package com.jai.sorted;



public class LLSorted<T>{
		
    class Node {
        T data;
        Node next;
  
    		public Node(T data) {
    			super();
    			this.data = data;
    			this.next = null;
    		}
    		
    	}
      public Node head = null;
      public Node tail = null;
  
      public void insertElement(T
    		  data) {
  		Node newNode = new Node(data);

  		// if list is blank
  		if (head == null) {
  			head = newNode;
  			return;
  		}
  		if (head.next == null) {
  			Node node = new Node(data);
  			if (data < head.data) {
  				node.next = head;
  				head = node;
  			} else {
  				head.next = node;
  			}
  			return;
  		}

  		Node curr = head.next, prev = head;
  		while (curr != null) {
  			if (prev.data <= data && curr.data >= data) {
  				prev.next = new Node(data);
  				prev.next.next = curr;
  				return;
  			}
  			curr = curr.next;
  		}
  		prev.next = new Node(data);
  	}
      
    public void display()
    {
        Node current = head;
        if (head == null) {
            System.out.println("List is empty");
            return;
        }
        while (current != null) {
            System.out.print(current.data + " ");
            current = current.next;
        }
  
        System.out.println();
    }
}
